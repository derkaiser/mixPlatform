#-------------------------------------------------------------------------------
# Property file for "Mix".
#-------------------------------------------------------------------------------
#
# The following properties have the following form: "KEY=VALUE".
# Note: Changing a KEY will result in runtime errors.
#
#-------------------------------------------------------------------------------
#
#-------------------------------------------------------------------------------
# General settings (used by Mix and Client):
#-------------------------------------------------------------------------------
#
# LOG_LEVEL
# Level for logging information (about the data the mix processes). For a 
# detailed explanation of the different levels see 
# "http://java.sun.com/j2se/1.4.2/docs/api/java/util/logging/Level.html".
# Possible levels: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.
# Default value: FINE
LOG_LEVEL = FINE
#
#
# DISPLAY_LEVEL
# Level for displaying information (about the data the mix processes). The mix 
# produces a log file with entries of different levels (see "LOG_LEVEL" and 
# "http://java.sun.com/j2se/1.4.2/docs/api/java/util/logging/Level.html" ). The 
# variable "DISPLAY_LEVEL" indicates which of these entries shall be displayed 
# on the standard output.
# Possible levels: INFO, CONFIG, FINE, FINER, FINEST, ALL.
# Default value: INFO
DISPLAY_LEVEL = FINE
#
#-------------------------------------------------------------------------------
# General Mix settings:
#-------------------------------------------------------------------------------
#
# POSITION_OF_MIX_IN_CASCADE
# This mix' position in the cascade it belongs to. "1" means "first mix", "2" 
# means "a middle mix" and "3" means "last mix" of cascade.
POSITION_OF_MIX_IN_CASCADE = 1
#
#
# NUMBER_OF_FURTHER_MIXES
# Number of further mixes between this mix and the receiver.
NUMBER_OF_FURTHER_MIXES = 1
#
#
# NUMBER_OF_PREVIOUS_MIXES
# Number of previous mixes between this mix and the sender.
NUMBER_OF_PREVIOUS_MIXES = 1
#
#
# NUMBER_OF_THREADS
# The number of Threads to perform the mixing process in parallel. Can increase 
# mix performance on multi-core/multi-CPU systems. Should be set to the number 
# of available cores/CPUs, or slightly lower (Note: A higher value will 
# decrease performance).
# Note: "-1" means automatic detection (Sets "NUMBER_OF_THREADS" to the number 
# of processors available to the JVM running this mix).
# Default value: -1
NUMBER_OF_THREADS = -1
#
#
# MAX_REQUEST_LENGTH
# Maximum size of a "Request" in byte (used to initialize buffers).
MAX_REQUEST_LENGTH = 2048
#
#
# MAX_REPLY_LENGTH
# Maximum size of a "Reply" in byte (used to initialize buffers).
MAX_REPLY_LENGTH = 2048
#
#
# MAX_REPLY_LENGTH
# Size of the buffer used to communicate with proxy server (on last mix of 
# cascade) in byte.
PROXY_BUFFER_SIZE = 50000
#
#
# INACTIVITY_TIMEOUT
# Period of time without actions, after which a user is considered as inactive 
# (and therefore will be dropped).
INACTIVITY_TIMEOUT = 60000
#
#
# CLEAN_DB_INTERVAL
# Time between checks for inactive users. See INACTIVITY_TIMEOUT.
CLEAN_DB_INTERVAL = 120000
#
#-------------------------------------------------------------------------------
# Output strategy (batch) settings (used by Mix only):
#-------------------------------------------------------------------------------
#
# INITIAL_BUFFER_SIZE
# Initial size of the buffer used to store messages (gets resized 
# automatically). Should't be set higher than MAX_CONNECTIONS.
INITIAL_BUFFER_SIZE = 100
#
#
# NEEDED_CHANNEL_ESTABLISH_MESSAGES
# Minimum number of ChannelEstablishMessages that must be collected, before 
# putting out the (request) batch (if at least one ChannelEstablishMessage is in
# the batch).
NEEDED_CHANNEL_ESTABLISH_MESSAGES = 3
#
#
# BATCH_TIMEOUT
# Amount of time, after which the batch is put out, no matter how many messages 
# it contains.
BATCH_TIMEOUT = 1000
#
#-------------------------------------------------------------------------------
# Channel adjustment settings (used by last Mix of cascade only):
#-------------------------------------------------------------------------------
#
# VOLUME_DECISSION_CHECK_RATE
# Amount of time between validations of the traffic situation.
VOLUME_DECISSION_CHECK_RATE = 100
#
#
# VOLUME_DECISSION_TIMEOUT
# Timeout for reply size decision in ms (forces sending, no matter how much 
# data is collected).
VOLUME_DECISSION_TIMEOUT = 2000
#
#
# G
# Tradeoff-indicator between padding and the total amount of data (available),
# actually sent. "0.0" means "don't allow padding", "1.0" means "send all data
# available, no matter how much padding is necessary" and "0.5" means an 
# "equilibrated proportion". Any value between "0.0" and "1.0" is possible. 
G = 1.0
#
#
# MIN_VOLUME_PER_CHANNEL
# Minimum amount of data per channel (before replying is allowed) in byte.
# See MIN_FILLED_CHANNELS
MIN_VOLUME_PER_CHANNEL = 100
#
#
# MIN_FILLED_CHANNELS
# Minimum number of channels with data available to be returned (before replying
# is allowed). See MIN_VOLUME_PER_CHANNEL.
MIN_FILLED_CHANNELS = 0.5
#
#-------------------------------------------------------------------------------
# Network settings (used by Mix only):
#-------------------------------------------------------------------------------
#
# MAX_CONNECTIONS
# Maximum number of connections (=connected Clients). 
MAX_CONNECTIONS = 1000
#
#
# BIND_ADDRESS
# Address this mix' socket shall be bound to.
BIND_ADDRESS = 127.0.0.1
#
#
# PORT
# Port the mix shall listen for connections on.
# Default value: 23301
PORT = 23302
#
#
# BACKLOG
# The maximum queue length for incoming connection indications. If a connection 
# indication arrives when the queue is full, the connection is refused.
BACKLOG = 5
#
#
# SO_TIMEOUT
# Maximum amount of time an "accept" (of a client's connection) may take before 
# being canceled in ms.
SO_TIMEOUT = 30000
#
#
# NEXT_MIX_ADDRESS
# Address of the next mix in the cascade (can stay blank for last mix of 
# cascade).
NEXT_MIX_ADDRESS = 127.0.0.1
#
#
# NEXT_MIX_PORT
# Port number of the next mix in the cascade (can stay blank for last mix of 
# cascade).
NEXT_MIX_PORT = 23303
#
#
# PREVIOUS_MIX_ADDRESS
# Address of this mix' parent mix in the cascade (can stay blank for first mix 
# of cascade).
PREVIOUS_MIX_ADDRESS = 127.0.0.1
#
#
# PREVIOUS_MIX_PORT
# Port number of this mix' parent mix in the cascade (can stay blank for first 
# mix of cascade).
PREVIOUS_MIX_PORT = 23301
#
#
# INFO_BIND_ADDRESS
# Address the mix' "ExternalInformationPort" shall be bound to (The 
# "ExternalInformationPort" provides information about the mix via network, e. 
# g. its public key).
INFO_BIND_ADDRESS = 127.0.0.1
#
#
# INFO_PORT
# Port number the mix' "ExternalInformationPort" shall be bound to (The 
# "ExternalInformationPort" provides information about the mix via network, e. 
# g. its public key).
INFO_PORT = 23351
#
#
# NEXT_MIX_INFO_PORT
# Port number of the cascade's next mix' "ExternalInformationPort" (can stay 
# blank for last mix of cascade).
NEXT_MIX_INFO_PORT = 23352
#
#
# PREVIOUS_MIX_INFO_PORT
# Port number of this mix' parent mix'  "ExternalInformationPort" (can stay 
# blank for first mix of cascade). 
PREVIOUS_MIX_INFO_PORT = 23350
#
#-------------------------------------------------------------------------------
# Replay detection settings (used by Mix only):
#-------------------------------------------------------------------------------
#
# MAX_MESSAGE_DELAY
# Time after which a message is considered as out of date in ms.
# Depends on the number of users and messages and their processing time. 
# Note: Increasing this value will decrease the replay detection's performance.
# Default value: 60000
MAX_MESSAGE_DELAY = 30000
#
#
# INITIAL_REPLAY_DB_CAPACITY
# Initial capacity of the replay detection's hash table (tradeoff between wasted
# space and the need for time-consuming rehash operations). See 
# http://java.sun.com/javase/6/docs/api/java/util/Hashtable.html for further 
# information.
# Depends on the number of messages the mix is supposed to receive during it's
# maximum message delay (MAX_MESSAGE_DELAY). The value should be high enough 
# to make rehash operations almost impossible.
# Note: Each entry will consume 4 bytes for its key and 8 bytes for its value. 
#       Therefore, each entry will need 12 bytes. 
# Default value: 5000 (Size of hash table (without overhead): 5000 * 12 = 60 kB)
INITIAL_REPLAY_DB_CAPACITY = 5000
#
#
# DB_LOAD_FACTOR
# "A measure of how full the hash table [of the replay database] is allowed to 
# get before its capacity is automatically increased. [...] Generally, the 
# default load factor (.75) offers a good tradeoff between time and space costs.
# Higher values decrease the space overhead but increase the time cost to look 
# up an entry (which is reflected in most Hashtable operations, including get 
# and put)." http://java.sun.com/javase/6/docs/api/java/util/Hashtable.html
# Default value: 0.75
DB_LOAD_FACTOR = 0.75
#
#
# TIMESTAMP_TOLERANCE
# Maximum divergence between mix' and client's clock in ms. 
TIMESTAMP_TOLERANCE = 5000
#
#
#-------------------------------------------------------------------------------
# Clock settings (used by Mix and Client):
#-------------------------------------------------------------------------------
#
# USE_SYNCHRONIZED_CLOCK
# Indicates whether to use a (via NTP server) synchronized clock, or the local 
# System's clock. The mix' and client's clocks mustn't differ more than 
# TIMESTAMP_TOLERANCE ms.
# "0" means "no", "1" means "yes".
# Default value: 1
USE_SYNCHRONIZED_CLOCK = 0
#
#
# TIME_SERVER_HOST
# The NTP server's host, used for clock synchronization. A list of servers 
# can be found at http://www.hullen.de/helmut/filebox/DCF77/ntpsrvr.html.
# Default value: 134.76.98.232
TIME_SERVER_HOST = 134.76.98.232
#
#
# TIME_BETWEEN_CLOCK_SYNCHRONIZATIONS
# Time between clock synchronizations with NTP server.
# Default value: 600000
TIME_BETWEEN_CLOCK_SYNCHRONIZATIONS = 600000
#
#
#-------------------------------------------------------------------------------
# Cryptography settings (used by Client and Mix):
#-------------------------------------------------------------------------------
#
# CRYPTO_PROVIDER=BC
# Name of the crypto provider used to recode messages and check message 
# integrity.
# Default value: BC
CRYPTO_PROVIDER = BC
#
#
# ASYM_CRYPTOGRAPHY_ALGORITHM
# Name of the algorithm used to perform asymmetric cryptography.
# Note: Don't use a Padding scheme (All messages have a fixed length. "Free 
# space" shouldn't be padded, but instead used to store payload data!).
# Default value: RSA/NONE/NoPadding
ASYM_CRYPTOGRAPHY_ALGORITHM = RSA/NONE/NoPadding
#
#
# SYM_CRYPTOGRAPHY_ALGORITHM
# Name of the algorithm used to perform symmetric cryptography.
# Default value: AES/OFB/NOPADDING
# Note: Don't use a Padding scheme (All messages have a fixed length. "Free 
# space" shouldn't be padded, but instead used to store payload data!).
SYM_CRYPTOGRAPHY_ALGORITHM = AES/OFB/NOPADDING
#
#
# MAC_ALGORITHM
# Name of the algorithm used to generate a message authentication code.
# Default value: HMac-SHA256
MAC_ALGORITHM = HMac-SHA256
#
#
# NAME_OF_ASYM_KEY_GENERATOR
# Name of the key generator that shall be used to create the key for asymmetric 
# cryptography.
# Default value: RSA
NAME_OF_ASYM_KEY_GENERATOR = RSA
#
#
# ASYM_KEY_LENGTH
# Length of the key for asymmetric cryptography in bit.
# Default value: 2048
ASYM_KEY_LENGTH = 2048
#
#
# NAME_OF_SYM_KEY_GENERATOR
# Name of the key generator that shall be used to create the key for symmetric 
# cryptography.
# Default value: AES
NAME_OF_SYM_KEY_GENERATOR = AES
#
#
# SYM_KEY_LENGTH
# Length of the key for symmetric cryptography in bit.
# Default value: 256
SYM_KEY_LENGTH = 256
#
#
# INTER_MIX_CRYPTOGRAPHY_ALGORITHM
# Name of the algorithm used to encrypt data between mixes.
# Default value: AES/OFB/NOPADDING
INTER_MIX_CRYPTOGRAPHY_ALGORITHM = AES/OFB/NOPADDING
#
#
# NAME_OF_INTER_MIX_KEY_GENERATOR
# Name of the key generator that shall be used to create the key for  
# cryptography between mixes.
# Default value: AES
NAME_OF_INTER_MIX_KEY_GENERATOR = AES
#
#
# INTER_MIX_KEY_LENGTH
# Length of the key used to encrypt data between mixes.
# Default value: 256
INTER_MIX_KEY_LENGTH = 256
#
#-------------------------------------------------------------------------------
# Client settings:
#-------------------------------------------------------------------------------
#
# CASCADE_TIMEOUT
# Period of time, a client waits for the cascade to accept his connection 
# request in ms. Depends on network speed and type of communication. "0" is 
# interpreted as an infinite timeout.
# Default value: 30000
CASCADE_TIMEOUT = 1000
#
#
# CASCADE_ADDRESS
# Address of the cascade (cascade's first mix) used to transmit messages.
CASCADE_ADDRESS = 127.0.0.1
#
#
# CASCADE_PORT
# Port number of the cascade (cascade's first mix) used to transmit messages.
CASCADE_PORT = 23301
#
#
# CASCADE_INFO_PORT
# Port number the cascade's (cascade's first mix) "ExternalInformationPort" is 
# bound to (the "ExternalInformationPort" provides information about the mix, 
# e. g. its public key).
CASCADE_INFO_PORT = 23351
#
#
# RECEIVE_BUFFER_SIZE 
# Initial size of the buffer used to receive data from the cascade. Will be 
# resized automatically, when needed.
RECEIVE_BUFFER_SIZE = 2500
#
#
# SEND_BUFFER_SIZE
# Initial size of the buffer used to send data to the cascade. Must be (at 
# least) as large as the biggest message payload. Otherwise, messages won't be 
# filled completely.
SEND_BUFFER_SIZE = 2500
#
#
# REACTION_TIME
# Period of time to wait between the receival of a reply (from the cascade) and 
# the sending of a new Request for the user (application) to react (= add new 
# data to be sent). Note: If no new data or a disconnect request has arrived 
# during this period of time, a dummy message is sent.
REACTION_TIME = 100
#